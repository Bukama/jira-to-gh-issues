##
# The OAuth Access Token used to perform the migration. Visit
# https://github.com/settings/tokens
#
# This is typically put in application-local.properites
# so it is not accidentally pushed to a remote.
#github.access-token=

##
# The base url of JIRA to use. For example, "https://jira.spring.io"
jira.base-url=https://jira.spring.io
##
# The JIRA project id to migrate. For example, "SEC".
jira.projectId=SEC

##
# The github repository slug to migrate to. For example, to migrate the
# issues to https://github.com/spring-projects/spring-security/issues use
# "spring-projects/spring-security". It is a good idea to run the migration
# against a test repository first.
github.repository-slug=rwinch/spring-security-migrate-issues

##
# If set, the migration script will attempt to delete / create a GitHub
# repository to migrate the issues to using the github.repository-slug.
# Useful for testing the migration to a dummy repository.
# github.delete-create-repository-slug=true

##
# If set, will use this JQL query to import issues.
# Useful for migrating only a subset of queries (for testing).
# The default is to use "project = ${jira.projectId}"
#jira.migrate-jql=id\=SEC-1

##
# Log level of HTTP requests (when using apache commons)
#logging.level.org.apache.http.wire=DEBUG

##
# Includes the local profile. This allows for placing the OAuth token in application-local.properties so it is not
# accidentally pushed to any remotes.
spring.profiles.active=local
